1	1	IDENTIFIER                     	void
1	6	IDENTIFIER                     	some_function
1	19	LEFT_PARENTHESIS               	(
1	20	RIGHT_PARENTHESIS              	)
1	21	SEPARATOR_SEMICOLON            	;
2	1	IDENTIFIER                     	int
2	5	IDENTIFIER                     	another_function
2	21	LEFT_PARENTHESIS               	(
2	22	IDENTIFIER                     	float
2	28	IDENTIFIER                     	a
2	29	RIGHT_PARENTHESIS              	)
2	30	SEPARATOR_SEMICOLON            	;
4	1	IDENTIFIER                     	int
4	5	IDENTIFIER                     	main
4	9	LEFT_PARENTHESIS               	(
4	10	RIGHT_PARENTHESIS              	)
5	1	BLOCK_START                    	{
6	2	IDENTIFIER                     	some_function
6	15	LEFT_PARENTHESIS               	(
6	16	RIGHT_PARENTHESIS              	)
6	17	SEPARATOR_SEMICOLON            	;
8	2	KEYWORD                        	return
8	9	CONSTANT_INTEGER               	0
8	10	SEPARATOR_SEMICOLON            	;
9	1	BLOCK_END                      	}
11	1	IDENTIFIER                     	void
11	6	IDENTIFIER                     	some_function
11	19	LEFT_PARENTHESIS               	(
11	20	RIGHT_PARENTHESIS              	)
12	1	BLOCK_START                    	{
13	2	IDENTIFIER                     	float
13	8	IDENTIFIER                     	c
13	10	OPERATION_ASSIGN               	=
13	12	CONSTANT_FLOAT                 	10.0f
13	17	SEPARATOR_SEMICOLON            	;
15	2	KEYWORD                        	if
15	5	LEFT_PARENTHESIS               	(
15	6	IDENTIFIER                     	another_function
15	22	LEFT_PARENTHESIS               	(
15	23	IDENTIFIER                     	c
15	24	RIGHT_PARENTHESIS              	)
15	26	OPERATION_LESS_THAN            	<
15	28	CONSTANT_INTEGER               	25
15	30	RIGHT_PARENTHESIS              	)
15	32	BLOCK_START                    	{
16	3	IDENTIFIER                     	c
16	5	OPERATION_ASTERISK_ASSIGN      	*=
16	8	CONSTANT_INTEGER               	2
16	9	SEPARATOR_SEMICOLON            	;
17	2	BLOCK_END                      	}
17	4	KEYWORD                        	else
17	9	BLOCK_START                    	{
18	3	IDENTIFIER                     	c
18	5	OPERATION_ASTERISK_ASSIGN      	*=
18	8	CONSTANT_INTEGER               	3
18	9	SEPARATOR_SEMICOLON            	;
19	2	BLOCK_END                      	}
20	1	BLOCK_END                      	}
22	1	IDENTIFIER                     	int
22	5	IDENTIFIER                     	another_function
22	21	LEFT_PARENTHESIS               	(
22	22	IDENTIFIER                     	float
22	28	IDENTIFIER                     	a
22	29	RIGHT_PARENTHESIS              	)
23	1	BLOCK_START                    	{
24	2	KEYWORD                        	return
24	9	CONSTANT_INTEGER               	5
24	11	OPERATION_ASTERISK             	*
24	13	IDENTIFIER                     	a
24	14	SEPARATOR_SEMICOLON            	;
25	1	BLOCK_END                      	}
26	1	EOF                            	
